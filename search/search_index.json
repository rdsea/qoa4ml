{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"QoA4ML - Quality of Analytics for ML","text":""},{"location":"#source-code","title":"Source code","text":"<p>QoA4ML</p>"},{"location":"#monitoring-client","title":"Monitoring Client","text":"<p>QoA Client: an object that observes metrics, generates metric reports, and sends them to the Observation service via a list of connectors (e.g., messaging connector: RabbitMQ).</p> <p>The developers only need to init a QoAClient at the beginning and use it to observe/evaluate metrics by self-instrumentation (calling its functions) at the right place in the source code.</p> <ul> <li>To initiate a QoA Client, developers can specify a configuration file path or refer to a configuration as a dictionary, or give the registration service (URL) where the client can get its configuration.</li> </ul> <p>The <code>configuration</code> contains the information about the client and its configuration in form of dictionary</p> <p>Example:</p> <pre><code>clientConf = {\n    \"client\":{\n        \"user_id\": \"aaltosea1\",\n        \"instance_name\": \"ML02\",\n        \"stage_id\": \"ML\",\n        \"method\": \"REST\",\n        \"application_name\": \"test\",\n        \"role\": \"ml\"\n    },\n    \"connector\":{\n        \"amqp_connector\":{\n            \"class\": \"amqp\",\n            \"conf\":{\n                \"end_point\": \"localhost\",\n                \"exchange_name\": \"qoa4ml\",\n                \"exchange_type\": \"topic\",\n                \"out_routing_key\": \"qoa.report.ml\"\n            }\n        }\n    }\n}\nqoaClient = QoaClient(config_dict=clientConf)\n</code></pre> <p>The <code>connector</code> is the dictionary containing multiple connector configuration (amqp, mqtt, kafka) If 'connector' is not define, developer must give 'registration_url' The 'registration_url' specify the service where the client register for monitoring service. If it's set, the client register with the service and receive connector configuration. For example: \"http://localhost:5001/registration\"</p> <ul> <li> <p>Via this client, developers can call different monitoring probes to measure desired metrics and categorize them into data quality, service performance or inference quality.</p> </li> <li> <p>By using our probes (e.g., <code>observeErronous</code>, <code>observeMissing</code>, and <code>observeInferenceMetric</code>), the metrics are already categorized in the quality report.</p> </li> <li> <p>For unsupported metrics or user-defined metrics, the developers can report them by using <code>observeMetric</code> providing metric's names and their expected categories. For example <code>qoaClient.observeMetric(metric_name=\"image_width\", value=200, category=1)</code>.</p> </li> <li> <p>Category: metrics are categorized into following groups:</p> </li> <li>0 - Quality: Performance (metrics for evaluating service performance e.g., response time, throughput)</li> <li>1 - Quality: Data (metrics for evaluating data quality e.g., missing, duplicate, erroneous)</li> <li>2 - Quality: Inference (metrics for evaluating quality of ML inference, measured from inferences e.g., accuracy, confidence)</li> <li>3 - Resource: metrics for evaluating resource utilization e.g. CPU, Memory</li> <li>To send the quality report to the observation service, the developers can call <code>report</code> from the QoAClient. For example: <code>qualityReport = qoaClient.report()</code>, the function will additionally return the <code>report</code> at current stage and save it to <code>qualityReport</code></li> <li>To aggregate reports from previous stage (in a pipeline) for building the computation graphs, the client can call <code>importPReport</code>. For example <code>qoaClient.importPReport(previousReport)</code></li> </ul>"},{"location":"#probes","title":"Probes","text":"<ul> <li>QoA4ML Probes: libraries and lightweight modules capturing metrics. They are integrated into suitable ML serving frameworks and ML code</li> <li>Probe properties:</li> <li>Can be written in different languages (Python, GoLang)</li> <li>Can have different communications to monitoring systems (depending on probes and its ML support)</li> <li>Capture metrics with a clear definition/scope<ul> <li>e.g., Response time for an ML stage (training) or a service call (of ML APIs)</li> <li>Thus output of probes must be correlated to objects to be monitored and the tenant</li> </ul> </li> <li>Support high or low-level metrics/attributes<ul> <li>depending on probes implementation</li> </ul> </li> <li>Can be instrumented into source code or standalone</li> </ul>"},{"location":"#metric","title":"Metric","text":"<p>We support some metric classes for collecting different types of metric: Counter, Gauge, Summary, Histogram</p> <ul> <li><code>Metric</code>: an original class providing some common functions on an metric object.</li> <li>Attribute:<ul> <li><code>metric_name</code></li> <li><code>description</code></li> <li><code>value</code></li> </ul> </li> <li>Function:<ul> <li><code>__init__</code>: let user define the metric name, description and default value.</li> <li><code>set</code>: set its <code>value</code> to a specific value</li> <li><code>get_val</code>: get current value</li> <li><code>get_name</code>: return metric name</li> <li><code>get_des</code>: return metric description</li> <li><code>__str__</code>: return information about the metric in form of string</li> <li><code>to_dict</code>: return information about the metric in form of dictionary</li> </ul> </li> <li><code>Counter</code></li> <li>Attribute: same as <code>Metric</code> &amp; on further developing</li> <li>Function:<ul> <li><code>inc</code>: increase the value of the metric by the given number/by 1 by default.</li> <li><code>reset</code>: set the value back to zero.</li> </ul> </li> <li><code>Gauge</code></li> <li>Attribute: same as <code>Metric</code> &amp; on further developing</li> <li>Function:<ul> <li><code>inc</code>: increase the value of the metric by a given number/by 1 by default.</li> <li><code>dec</code>: decrease the value of the metric by a given number/by 1 by default.</li> <li><code>set</code>: set the value to a given number.</li> </ul> </li> <li><code>Summary</code></li> <li>Attribute: same as <code>Metric</code> &amp; on further developing</li> <li>Function:<ul> <li><code>inc</code>: increase the value of the metric by a given number/by 1 by default.</li> <li><code>dec</code>: decrease the value of the metric by a given number/by 1 by default.</li> <li><code>set</code>: set the value to a given number.</li> </ul> </li> <li><code>Histogram</code></li> <li>Attribute: same as <code>Metric</code> &amp; on further developing</li> <li>Function:<ul> <li><code>inc</code>: increase the value of the metric by a given number/by 1 by default.</li> <li><code>dec</code>: decrease the value of the metric by a given number/by 1 by default.</li> <li><code>set</code>: set the value to a given number.</li> </ul> </li> </ul>"},{"location":"#qoa4ml-reports","title":"QoA4ML Reports","text":"<p>This module defines <code>QoA_Report</code>, an object that provide functions to export monitored metric to the following schema:</p> <pre><code>{\n    \"computationGraph\":{\n        \"instances\":{\n            \"@instance_id\":{\n                \"instance_name\": \"@name_of_instance\",\n                \"method\": \"@method/task/function\",\n                \"previous_instance\":[\"@list_of_previous_instance\"]\n            },\n            ...\n        },\n        \"last_instance\": \"@name_of_last_instance_in_the_graph\"\n    },\n    \"quality\":{\n        \"data\":{\n            \"@stage_id\":{\n                \"@metric_name\":{\n                    \"@instance_id\": \"@value\"\n                }\n            }\n        },\n        \"performance\":{\n            \"@stage_id\":{\n                \"@metric_name\":{\n                    \"@instance_id\": \"@value\"\n                }\n            }\n        },\n        \"inference\":{\n            \"@inference_id\":{\n                \"value\": \"@value\",\n                \"confident\": \"@confidence\",\n                \"accuracy\": \"@accuracy\",\n                \"instance_id\": \"@instance_id\",\n                \"source\": [\"@list_of_inferences_to_infer_this_inference\"]\n            }\n        }\n    }\n}\n</code></pre> <p>The example is shown in <code>example/reports/qoa_report/example.txt</code></p> <ul> <li> <p>Attribute:</p> </li> <li> <p><code>previous_report_instance</code> = list previous services</p> </li> <li><code>report_list</code>: list of reports from previous services</li> <li><code>previous_inference</code>: list previous inferences</li> <li><code>quality_report</code>: report all quality (data, service, inference qualtiy) of the service</li> <li><code>execution_graph</code>: report the execution graph</li> <li> <p><code>report</code>: the final report to be sent</p> </li> <li> <p>Function:</p> </li> <li><code>__init__</code>: init as empty report.</li> <li><code>import_report_from_file</code>: init QoA Report from <code>json</code> file.</li> <li><code>importPReport</code>: import reports from previous service to build the execution and inference graph</li> <li><code>build_execution_graph</code>: build execution graph from list of previous reports</li> <li><code>build_quality_report</code>: build the quality report from metrics collected in runtime</li> <li><code>generateReport</code>: return the final report.</li> <li><code>observeMetric</code>: observe metrics in runtime with 3 categories: service quality, data quality, inference qualtiy. This can be extended to observe resource metrics.</li> </ul>"},{"location":"#examples","title":"Examples","text":"<p>https://github.com/rdsea/QoA4ML/tree/main/example</p>"},{"location":"#overview","title":"Overview","text":"<p>Probes will be integrated to client program or system service to collect metrics at the edge Probes will generate reports and sent to message broker using different connector. Corresponding collector should be used to acquire the metrics.</p>"},{"location":"#collector","title":"Collector","text":"<p>The manager/orchestrator have to integrate collector to collect metric using different protocols for further analysis.</p> <ul> <li>Attribute:</li> <li> <p>Function:</p> </li> <li> <p><code>__init__</code>: take a configuration as a <code>dict</code> containing information about the data source, eg. broker, channel, queue, etc. It can take an <code>object</code> as an attribute <code>host</code> to return the message for further processing.</p> </li> <li> <p>If the collector is initiated by an object inherited class, this class must implement <code>message_processing</code> function to process the message returned by the collector. Otherwise, the collector will print the message to the console.</p> </li> <li> <p><code>on_request</code>: handle message from data source (message broker,...)</p> </li> <li> <p><code>start</code> &amp; <code>stop</code>: start and stop consuming message</p> </li> <li> <p><code>get_queue</code>: return the queue name.</p> </li> </ul>"},{"location":"#connector","title":"Connector","text":"<p>Connectors are implement with different protocols for sending report. Example: sending report to message broker - AMQP/MQTT</p> <ul> <li>Attribute:</li> <li> <p>Function:</p> </li> <li> <p><code>__init__</code>: take a configuration as a <code>dict</code> containing information about the data sink, eg. broker, channel, queue, etc. It can take a <code>bool</code> parameter <code>log</code> for logging messages for further processing.</p> </li> <li> <p><code>send_data</code>: a function to send data to specified <code>routing_key</code>/<code>queue</code> with a corresponding key <code>corr_id</code> to trace back message.</p> </li> </ul>"},{"location":"#utilities","title":"Utilities","text":"<p>A module provide some frequently used functions and some function to directly collect system metrics.</p>"},{"location":"#note","title":"Note","text":"<ul> <li><code>eva_duplicate</code>, <code>eva_erronous</code>, <code>eva_missing</code>, and <code>detect_outlier</code> probes are using ydata-quality library, which is only available for Python 3.8</li> <li>For using ML quality probes, you may need to install a few more dependencies, e.g., tensorflow and Pillow.</li> <li>QoaClient uses AMQP protocol by default. To use MQTT, you may need to install <code>paho-mqtt</code>.</li> <li>To monitor Docker stats, you need to install docker python client.</li> <li>To connect with Prometheus, you need to install prometheus-client</li> </ul>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>qoa4ml<ul> <li>collector<ul> <li>amqp_collector</li> <li>base_collector</li> <li>host_object</li> <li>kafka_collector</li> <li>socket_collector</li> </ul> </li> <li>config<ul> <li>configs</li> </ul> </li> <li>connector<ul> <li>amqp_connector</li> <li>base_connector</li> <li>debug_connector</li> <li>kafka_connector</li> <li>mqtt_connector</li> <li>prom_connector</li> <li>socket_connector</li> </ul> </li> <li>lang<ul> <li>attributes</li> <li>common_models</li> <li>datamodel_enum</li> <li>ml_contract</li> </ul> </li> <li>observability<ul> <li>odop_obs<ul> <li>embedded_database</li> <li>exporter</li> <li>node_aggregator</li> </ul> </li> </ul> </li> <li>probes<ul> <li>docker_monitoring_probe</li> <li>mlquality</li> <li>probe</li> <li>process_monitoring_probe</li> <li>system_monitoring_probe</li> </ul> </li> <li>qoa_client</li> <li>reports<ul> <li>abstract_report</li> <li>general_application_report</li> <li>ml_report_model</li> <li>ml_reports</li> <li>resources_report_model</li> <li>rohe_reports</li> </ul> </li> <li>utils<ul> <li>dataquality_utils</li> <li>docker_util</li> <li>gpu_utils</li> <li>jetson_utils</li> <li>logger</li> <li>pynvml_forked</li> <li>qoa_utils</li> <li>repeated_timer</li> </ul> </li> </ul> </li> </ul>"},{"location":"reference/qoa4ml/","title":"qoa4ml","text":""},{"location":"reference/qoa4ml/#qoa4ml","title":"<code>qoa4ml</code>","text":""},{"location":"reference/qoa4ml/qoa_client/","title":"qoa_client","text":""},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client","title":"<code>qoa4ml.qoa_client</code>","text":""},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient","title":"<code>QoaClient</code>","text":""},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.__init__","title":"<code>__init__(report_cls=MLReport, config_dict=None, config_path=None, registration_url=None)</code>","text":"<p>Initialize the QoA Client with configuration settings and a report class.</p> <p>Parameters:</p> Name Type Description Default <code>report_cls</code> \u00b6 <code>type[T]</code> <p>The class type for reports, default is MLReport.</p> <code>MLReport</code> <code>config_dict</code> \u00b6 <code>dict</code> <p>A dictionary to load the client's configuration from.</p> <code>None</code> <code>config_path</code> \u00b6 <code>str</code> <p>Path to a JSON configuration file.</p> <code>None</code> <code>registration_url</code> \u00b6 <code>str</code> <p>URL for registering the client and receiving configuration data.</p> <code>None</code> Notes <ul> <li>If both <code>config_dict</code> and <code>config_path</code> are provided, the <code>config_dict</code> will take precedence.</li> <li>If neither <code>config_dict</code> nor <code>config_path</code> is provided, the client may attempt to fetch configurations from the <code>registration_url</code>.</li> <li>The method will raise an exception if the necessary configuration details are not found.</li> </ul>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.__str__","title":"<code>__str__()</code>","text":"<p>Returns a string representation of the client's configuration and connectors.</p> <p>Returns:</p> Type Description <code>str</code> <p>JSON representation of the client configuration and a string representation of the connector list.</p> Notes <p>This method is particularly useful for debugging and logging purposes.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.asyn_report","title":"<code>asyn_report(body_mess, connectors=None)</code>","text":"<p>Asynchronously send a report through the connectors.</p> <p>Parameters:</p> Name Type Description Default <code>body_mess</code> \u00b6 <code>str</code> <p>The message body to be sent.</p> required <code>connectors</code> \u00b6 <code>list</code> <p>A list of connectors to send the report through. If None, the default connector is used.</p> <code>None</code> Notes <p>Uses threading to send reports asynchronously.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.get_client_config","title":"<code>get_client_config()</code>","text":"<p>Get the current client configuration.</p> <p>Returns:</p> Type Description <code>ClientConfig</code> <p>The client's current configuration settings.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.import_previous_report","title":"<code>import_previous_report(reports)</code>","text":"<p>Import and process previous reports.</p> <p>Parameters:</p> Name Type Description Default <code>reports</code> \u00b6 <code>Union[dict, list[dict]]</code> <p>A single report or a list of reports to be processed.</p> required"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.init_connector","title":"<code>init_connector(configuration)</code>","text":"<p>Initialize a connector based on the configuration provided.</p> <p>Parameters:</p> Name Type Description Default <code>configuration</code> \u00b6 <code>ConnectorConfig</code> <p>Configuration settings for initializing the connector.</p> required <p>Returns:</p> Type Description <code>BaseConnector</code> <p>An instance of the connector (e.g., AMQP, Debug).</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>If the connector configuration type is not supported.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.init_probes","title":"<code>init_probes(probe_config_list, client_info)</code>","text":"<p>Initialize monitoring probes based on the provided probe configuration list.</p> <p>Parameters:</p> Name Type Description Default <code>probe_config_list</code> \u00b6 <code>list[ProbeConfig]</code> <p>A list of configuration settings for each probe.</p> required <code>client_info</code> \u00b6 <code>ClientInfo</code> <p>Information about the client to be passed to each probe.</p> required <p>Returns:</p> Type Description <code>list[Probe]</code> <p>A list of initialized probe instances.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If an unsupported probe configuration type is provided.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.observe_inference","title":"<code>observe_inference(inference_value)</code>","text":"<p>Observe and record inference data.</p> <p>Parameters:</p> Name Type Description Default <code>inference_value</code> \u00b6 <code>Any</code> <p>The value of the inference to be observed.</p> required Notes <p>This method is used to record predictions or inference results for later analysis.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.observe_inference_metric","title":"<code>observe_inference_metric(metric_name, value)</code>","text":"<p>Observe and report a specific inference metric.</p> <p>Parameters:</p> Name Type Description Default <code>metric_name</code> \u00b6 <code>MetricNameEnum</code> <p>The name of the inference metric being observed.</p> required <code>value</code> \u00b6 <code>Any</code> <p>The value of the observed metric.</p> required Notes <p>This method can be used to log performance metrics, evaluation scores, etc. during inference.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.observe_metric","title":"<code>observe_metric(metric_name, value, category=0, description='')</code>","text":"<p>Observe and report a metric.</p> <p>Parameters:</p> Name Type Description Default <code>metric_name</code> \u00b6 <code>MetricNameEnum</code> <p>The name of the metric being observed.</p> required <code>value</code> \u00b6 <code>Any</code> <p>The value of the observed metric.</p> required <code>category</code> \u00b6 <code>int</code> <p>The category of the metric (0: service, 1: data, 2: security), default is 0.</p> <code>0</code> <code>description</code> \u00b6 <code>str</code> <p>An optional description of the observed metric, default is \"\".</p> <code>''</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>If the category type is not supported.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.registration","title":"<code>registration(url)</code>","text":"<p>Registers the client with the monitoring service and retrieves connector configurations.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> \u00b6 <code>str</code> <p>The registration URL to fetch the connector configuration from.</p> required <p>Returns:</p> Type Description <code>Response</code> <p>The response from the registration service, containing connector configurations.</p> Notes <p>This method sends a POST request to the given URL with the client's configuration in JSON format.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.report","title":"<code>report(report=None, connectors=None, submit=False, reset=True, corr_id=None)</code>","text":"<p>Generate a report and optionally submit it through the default connector.</p> <p>Parameters:</p> Name Type Description Default <code>report</code> \u00b6 <code>dict</code> <p>The report data to be submitted. If None, a report will be generated.</p> <code>None</code> <code>connectors</code> \u00b6 <code>list</code> <p>A list of connectors through which to send the report, default is None.</p> <code>None</code> <code>submit</code> \u00b6 <code>bool</code> <p>Whether to submit the report, default is False.</p> <code>False</code> <code>reset</code> \u00b6 <code>bool</code> <p>Whether to reset the report state after submission, default is True.</p> <code>True</code> <code>corr_id</code> \u00b6 <code>str</code> <p>The correlation ID for the report, default is None.</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>The JSON-encoded report.</p> Notes <p>The method will create a report based on the current state if none is provided. If <code>submit</code> is True, the report will be sent through the default or specified connectors.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.set_config","title":"<code>set_config(key, value)</code>","text":"<p>Update a specific configuration setting by key.</p> <p>Parameters:</p> Name Type Description Default <code>key</code> \u00b6 <code>str</code> <p>The configuration attribute name to be updated.</p> required <code>value</code> \u00b6 <code>Any</code> <p>The value to set for the specified key.</p> required <p>Raises:</p> Type Description <code>Exception</code> <p>Logs an error if setting the configuration value fails.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.start_all_probes","title":"<code>start_all_probes()</code>","text":"<p>Start all probes for monitoring, running them in the background.</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>If no probes have been initialized.</p> Notes <p>If the probe takes a long time to report and the main process exits, no report may be sent.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.stop_all_probes","title":"<code>stop_all_probes()</code>","text":"<p>Stop all running probes.</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>If no probes have been initialized.</p> Notes <p>This method stops the background monitoring activities of all active probes.</p>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client.QoaClient.timer","title":"<code>timer()</code>","text":"<p>Start or stop a timer and record the response time.</p> <p>Returns:</p> Type Description <code>dict</code> <p>A dictionary containing the start time and response time.</p> Notes <ul> <li>When called for the first time, it starts the timer.</li> <li>When called again, it stops the timer and records the response time as a metric.</li> </ul>"},{"location":"reference/qoa4ml/qoa_client/#qoa4ml.qoa_client-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/collector/","title":"collector","text":""},{"location":"reference/qoa4ml/collector/#qoa4ml.collector","title":"<code>qoa4ml.collector</code>","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/","title":"amqp_collector","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector","title":"<code>qoa4ml.collector.amqp_collector</code>","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector","title":"<code>AmqpCollector</code>","text":"<p>AmqpCollector handles the connection to an AMQP server for collecting and processing messages.</p> <p>Parameters:</p> Name Type Description Default <code>AMQPCollectorConfig</code> <p>Configuration settings for connecting to the AMQP server.</p> required <code>Optional[HostObject]</code> <p>An optional HostObject to process incoming messages, default is None.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>host_object</code> <code>Optional[HostObject]</code> <p>The host object responsible for processing messages.</p> <code>exchange_name</code> <code>str</code> <p>The name of the exchange to connect to.</p> <code>exchange_type</code> <code>str</code> <p>The type of the exchange (e.g., 'direct', 'topic').</p> <code>in_routing_key</code> <code>str</code> <p>The routing key for incoming messages.</p> <code>in_connection</code> <code>BlockingConnection</code> <p>The connection to the RabbitMQ server.</p> <code>in_channel</code> <code>Channel</code> <p>The channel for communication with RabbitMQ.</p> <code>queue</code> <code>DeclareOk</code> <p>The queue to receive prediction responses.</p> <code>queue_name</code> <code>str</code> <p>The name of the queue.</p> <p>Methods:</p> Name Description <code>on_request</code> <p>Process incoming request messages.</p> <code>start_collecting</code> <p>Start collecting messages from the queue.</p> <code>stop</code> <p>Stop collecting messages and close the connection.</p> <code>get_queue</code> <p>Get the name of the queue.</p>"},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector(configuration)","title":"<code>configuration</code>","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector(host_object)","title":"<code>host_object</code>","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector.__init__","title":"<code>__init__(configuration, host_object=None)</code>","text":"<p>Initialize an instance of AmqpCollector.</p> <p>Parameters:</p> Name Type Description Default <code>configuration</code> \u00b6 <code>AMQPCollectorConfig</code> <p>Configuration settings for connecting to the AMQP server.</p> required <code>host_object</code> \u00b6 <code>Optional[HostObject]</code> <p>An optional HostObject to process incoming messages, default is None.</p> <code>None</code>"},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector.get_queue","title":"<code>get_queue()</code>","text":"<p>Get the name of the queue.</p> <p>Returns:</p> Type Description <code>str</code> <p>The name of the queue.</p>"},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector.on_request","title":"<code>on_request(ch, method, props, body)</code>","text":"<p>Process incoming request messages.</p> <p>Parameters:</p> Name Type Description Default <code>ch</code> \u00b6 <code>Channel</code> <p>The channel object for the communication.</p> required <code>method</code> \u00b6 <code>Deliver</code> <p>The method frame object containing delivery parameters.</p> required <code>props</code> \u00b6 <code>BasicProperties</code> <p>The properties frame object containing message properties.</p> required <code>body</code> \u00b6 <code>bytes</code> <p>The message body sent from the producer.</p> required Notes <p>If <code>host_object</code> is provided, it will handle message processing. Otherwise, the raw message will be logged.</p>"},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector.start_collecting","title":"<code>start_collecting()</code>","text":"<p>Start collecting messages from the queue.</p> Notes <p>This method starts the RabbitMQ consumer to collect messages from the queue and process them. The method will block and run indefinitely until <code>stop</code> is called.</p>"},{"location":"reference/qoa4ml/collector/amqp_collector/#qoa4ml.collector.amqp_collector.AmqpCollector.stop","title":"<code>stop()</code>","text":"<p>Stop collecting messages and close the connection.</p> Notes <p>This method stops the consumer from collecting messages and closes the channel.</p>"},{"location":"reference/qoa4ml/collector/base_collector/","title":"base_collector","text":""},{"location":"reference/qoa4ml/collector/base_collector/#qoa4ml.collector.base_collector","title":"<code>qoa4ml.collector.base_collector</code>","text":""},{"location":"reference/qoa4ml/collector/host_object/","title":"host_object","text":""},{"location":"reference/qoa4ml/collector/host_object/#qoa4ml.collector.host_object","title":"<code>qoa4ml.collector.host_object</code>","text":""},{"location":"reference/qoa4ml/collector/kafka_collector/","title":"kafka_collector","text":""},{"location":"reference/qoa4ml/collector/kafka_collector/#qoa4ml.collector.kafka_collector","title":"<code>qoa4ml.collector.kafka_collector</code>","text":""},{"location":"reference/qoa4ml/collector/socket_collector/","title":"socket_collector","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector","title":"<code>qoa4ml.collector.socket_collector</code>","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector","title":"<code>SocketCollector</code>","text":"<p>SocketCollector handles the collection of data over a TCP socket.</p> <p>Parameters:</p> Name Type Description Default <code>SocketCollectorConfig</code> <p>Configuration settings for the socket collector.</p> required <code>Callable</code> <p>A callable function to process incoming reports.</p> required <p>Attributes:</p> Name Type Description <code>config</code> <code>SocketCollectorConfig</code> <p>The socket collector configuration.</p> <code>host</code> <code>str</code> <p>The hostname or IP address to bind the socket.</p> <code>port</code> <code>int</code> <p>The port number to bind the socket.</p> <code>backlog</code> <code>int</code> <p>The maximum number of queued connections.</p> <code>bufsize</code> <code>int</code> <p>The maximum size of data to be received at once.</p> <code>process_report</code> <code>Callable</code> <p>A function to process the received report.</p> <code>execution_flag</code> <code>bool</code> <p>Flag to control the execution loop.</p> <p>Methods:</p> Name Description <code>start_collecting</code> <p>Start the socket server to collect and process incoming data.</p>"},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector(process_report)","title":"<code>process_report</code>","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector.__init__","title":"<code>__init__(config, process_report)</code>","text":"<p>Initialize an instance of SocketCollector.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>SocketCollectorConfig</code> <p>Configuration settings for the socket collector.</p> required <code>process_report</code> \u00b6 <code>Callable</code> <p>A callable function to process incoming reports.</p> required"},{"location":"reference/qoa4ml/collector/socket_collector/#qoa4ml.collector.socket_collector.SocketCollector.start_collecting","title":"<code>start_collecting()</code>","text":"<p>Start the socket server to collect and process incoming data.</p> Notes <ul> <li>This method starts a TCP socket server that listens for incoming connections.</li> <li>Data received from clients is deserialized using pickle and then processed using the <code>process_report</code> function.</li> <li>The server runs indefinitely until the <code>execution_flag</code> is set to False.</li> </ul>"},{"location":"reference/qoa4ml/config/","title":"config","text":""},{"location":"reference/qoa4ml/config/#qoa4ml.config","title":"<code>qoa4ml.config</code>","text":""},{"location":"reference/qoa4ml/config/configs/","title":"configs","text":""},{"location":"reference/qoa4ml/config/configs/#qoa4ml.config.configs","title":"<code>qoa4ml.config.configs</code>","text":""},{"location":"reference/qoa4ml/connector/","title":"connector","text":""},{"location":"reference/qoa4ml/connector/#qoa4ml.connector","title":"<code>qoa4ml.connector</code>","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/","title":"amqp_connector","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector","title":"<code>qoa4ml.connector.amqp_connector</code>","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector","title":"<code>AmqpConnector</code>","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector.__init__","title":"<code>__init__(config, log=False)</code>","text":"<p>AmqpConnector handles the connection to an AMQP server for sending messages.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>AMQPConnectorConfig</code> <p>Configuration settings for the AMQP connector.</p> required <code>log</code> \u00b6 <code>bool</code> <p>A flag to enable logging of messages, default is False.</p> <code>False</code> <p>Attributes:</p> Name Type Description <code>conf</code> <code>AMQPConnectorConfig</code> <p>The AMQP connector configuration.</p> <code>exchange_name</code> <code>str</code> <p>The name of the exchange to connect to.</p> <code>exchange_type</code> <code>str</code> <p>The type of the exchange (e.g., 'direct', 'topic').</p> <code>out_routing_key</code> <code>str</code> <p>The routing key for outgoing messages.</p> <code>log_flag</code> <code>bool</code> <p>Flag indicating whether to log messages.</p> <code>out_connection</code> <code>BlockingConnection</code> <p>The connection to the RabbitMQ server.</p> <code>out_channel</code> <code>Channel</code> <p>The channel for communication with RabbitMQ.</p> <p>Functions:</p> Name Description <code>send_report</code> <p>Send data to the desired destination.</p> <code>get</code> <p>Get the current configuration of the connector. Initialize an instance of AmqpConnector.</p>"},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector.__init__--parameters","title":"Parameters","text":"<p>config : AMQPConnectorConfig     Configuration settings for the AMQP connector. log : bool, optional     A flag to enable logging of messages, default is False.</p>"},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector.get","title":"<code>get()</code>","text":"<p>Get the current configuration of the connector.</p> <p>Returns:</p> Type Description <code>AMQPConnectorConfig</code> <p>The AMQP connector configuration.</p>"},{"location":"reference/qoa4ml/connector/amqp_connector/#qoa4ml.connector.amqp_connector.AmqpConnector.send_report","title":"<code>send_report(body_message, corr_id=None, routing_key=None, expiration=1000)</code>","text":"<p>Send data to the desired destination.</p> <p>Parameters:</p> Name Type Description Default <code>body_message</code> \u00b6 <code>str</code> <p>The message body to be sent.</p> required <code>corr_id</code> \u00b6 <code>str</code> <p>The correlation ID for the message, default is None.</p> <code>None</code> <code>routing_key</code> \u00b6 <code>str</code> <p>The routing key for the message, default is None.</p> <code>None</code> <code>expiration</code> \u00b6 <code>int</code> <p>Message expiration time in milliseconds, default is 1000.</p> <code>1000</code> Notes <ul> <li>If <code>corr_id</code> is not provided, a new UUID will be generated.</li> <li>If <code>routing_key</code> is not provided, the default <code>out_routing_key</code> will be used.</li> </ul>"},{"location":"reference/qoa4ml/connector/base_connector/","title":"base_connector","text":""},{"location":"reference/qoa4ml/connector/base_connector/#qoa4ml.connector.base_connector","title":"<code>qoa4ml.connector.base_connector</code>","text":""},{"location":"reference/qoa4ml/connector/debug_connector/","title":"debug_connector","text":""},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector","title":"<code>qoa4ml.connector.debug_connector</code>","text":""},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector.DebugConnector","title":"<code>DebugConnector</code>","text":"<p>DebugConnector provides a connector for debugging purposes, enabling the logging of messages.</p> <p>Parameters:</p> Name Type Description Default <code>DebugConnectorConfig</code> <p>Configuration settings for the debug connector.</p> required <p>Attributes:</p> Name Type Description <code>silence</code> <code>bool</code> <p>Flag to suppress debugging output if set to True.</p> <p>Methods:</p> Name Description <code>send_report</code> <p>Send and debug the message.</p>"},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector.DebugConnector(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector.DebugConnector-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector.DebugConnector.__init__","title":"<code>__init__(config)</code>","text":"<p>Initialize an instance of DebugConnector.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>DebugConnectorConfig</code> <p>Configuration settings for the debug connector.</p> required"},{"location":"reference/qoa4ml/connector/debug_connector/#qoa4ml.connector.debug_connector.DebugConnector.send_report","title":"<code>send_report(body_message)</code>","text":"<p>Send and debug the message.</p> <p>Parameters:</p> Name Type Description Default <code>body_message</code> \u00b6 <code>str</code> <p>The message body to be sent and debugged.</p> required Notes <p>If <code>silence</code> is set to False, the message will be logged for debugging purposes.</p>"},{"location":"reference/qoa4ml/connector/kafka_connector/","title":"kafka_connector","text":""},{"location":"reference/qoa4ml/connector/kafka_connector/#qoa4ml.connector.kafka_connector","title":"<code>qoa4ml.connector.kafka_connector</code>","text":""},{"location":"reference/qoa4ml/connector/mqtt_connector/","title":"mqtt_connector","text":""},{"location":"reference/qoa4ml/connector/mqtt_connector/#qoa4ml.connector.mqtt_connector","title":"<code>qoa4ml.connector.mqtt_connector</code>","text":""},{"location":"reference/qoa4ml/connector/prom_connector/","title":"prom_connector","text":""},{"location":"reference/qoa4ml/connector/prom_connector/#qoa4ml.connector.prom_connector","title":"<code>qoa4ml.connector.prom_connector</code>","text":""},{"location":"reference/qoa4ml/connector/socket_connector/","title":"socket_connector","text":""},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector","title":"<code>qoa4ml.connector.socket_connector</code>","text":""},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector.SocketConnector","title":"<code>SocketConnector</code>","text":"<p>SocketConnector handles the connection to a TCP socket for sending serialized messages.</p> <p>Parameters:</p> Name Type Description Default <code>SocketConnectorConfig</code> <p>Configuration settings for the socket connector.</p> required <p>Attributes:</p> Name Type Description <code>config</code> <code>SocketConnectorConfig</code> <p>The socket connector configuration.</p> <code>host</code> <code>str</code> <p>The hostname or IP address to connect to.</p> <code>port</code> <code>int</code> <p>The port number to connect to on the host.</p> <p>Methods:</p> Name Description <code>send_report</code> <p>Send a serialized message over the socket and optionally log the round-trip time.</p>"},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector.SocketConnector(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector.SocketConnector-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector.SocketConnector.__init__","title":"<code>__init__(config)</code>","text":"<p>Initialize an instance of SocketConnector.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>SocketConnectorConfig</code> <p>Configuration settings for the socket connector.</p> required"},{"location":"reference/qoa4ml/connector/socket_connector/#qoa4ml.connector.socket_connector.SocketConnector.send_report","title":"<code>send_report(body_message, log_path=None)</code>","text":"<p>Send a serialized message over the socket and optionally log the round-trip time.</p> <p>Parameters:</p> Name Type Description Default <code>body_message</code> \u00b6 <code>str</code> <p>The message body to be serialized and sent.</p> required <code>log_path</code> \u00b6 <code>str</code> <p>The path to the log file where round-trip time will be recorded, default is None.</p> <code>None</code> Notes <ul> <li>This method serializes the <code>body_message</code> using the <code>pickle</code> module.</li> <li>It then sends the serialized message to the configured host and port.</li> <li>If <code>log_path</code> is provided, the round-trip time in milliseconds will be recorded in the specified log file.</li> </ul> <p>Raises:</p> Type Description <code>ConnectionRefusedError</code> <p>If the connection to the host is refused.</p>"},{"location":"reference/qoa4ml/lang/","title":"lang","text":""},{"location":"reference/qoa4ml/lang/#qoa4ml.lang","title":"<code>qoa4ml.lang</code>","text":""},{"location":"reference/qoa4ml/lang/attributes/","title":"attributes","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes","title":"<code>qoa4ml.lang.attributes</code>","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum","title":"<code>DataQualityEnum</code>","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum-attributes","title":"Attributes","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.ACCURACY","title":"<code>ACCURACY = 'accuracy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The ratio between correct and total data the service received (%)</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.COMPLETENESS","title":"<code>COMPLETENESS = 'completeness'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The ratio between received and expected number of data attributes sent to the service</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.DUPLICATE_RATIO","title":"<code>DUPLICATE_RATIO = 'duplicate_ratio'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Ratio of duplicate entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.ERROR_RATIOS","title":"<code>ERROR_RATIOS = 'error_ratios'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Ratio of errors in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.NONE_RATIO","title":"<code>NONE_RATIO = 'none_ratio'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Ratio of none or empty entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.NULL_CORRELATIONS","title":"<code>NULL_CORRELATIONS = 'null_correlations'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Correlation between null or undefined entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.NULL_COUNT","title":"<code>NULL_COUNT = 'null_count'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Count of null or undefined entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.TOTAL_DUPLICATE","title":"<code>TOTAL_DUPLICATE = 'total_duplicate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Total number of duplicate entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.TOTAL_ERRORS","title":"<code>TOTAL_ERRORS = 'total_errors'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Total number of errors as given by the user in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.TOTAL_NONE","title":"<code>TOTAL_NONE = 'total_none'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Total number of none or empty entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.DataQualityEnum.TOTAL_VALID","title":"<code>TOTAL_VALID = 'total_valid'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Total number of valid entries in the data</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum","title":"<code>MLModelQualityEnum</code>","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum-attributes","title":"Attributes","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum.ACCURACY","title":"<code>ACCURACY = 'accuracy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Can be measured in different ways such as confidence score in classification models</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum.AUC","title":"<code>AUC = 'auc'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The measure of the ability of a classifier to distinguish between classes and is used as a summary of the ROC curve</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum.MSE","title":"<code>MSE = 'mse'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Mean square error used for regression models</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum.PRECISION","title":"<code>PRECISION = 'precision'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The fraction of true positive responses over total number of positive responses</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.MLModelQualityEnum.RECALL","title":"<code>RECALL = 'recall'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The fraction of true positive responses over total number of correct responses</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.ServiceQualityEnum","title":"<code>ServiceQualityEnum</code>","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.ServiceQualityEnum-attributes","title":"Attributes","text":""},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.ServiceQualityEnum.AVAILABILITY","title":"<code>AVAILABILITY = 'availability'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The ratio between up time and down time of the service (%)</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.ServiceQualityEnum.RELIABILITY","title":"<code>RELIABILITY = 'reliability'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The ratio between correct and total service responses (%)</p>"},{"location":"reference/qoa4ml/lang/attributes/#qoa4ml.lang.attributes.ServiceQualityEnum.RESPONSE_TIME","title":"<code>RESPONSE_TIME = 'response_time'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The response time of each microservice, measured by the time period between receiving and replying the request (s)</p>"},{"location":"reference/qoa4ml/lang/common_models/","title":"common_models","text":""},{"location":"reference/qoa4ml/lang/common_models/#qoa4ml.lang.common_models","title":"<code>qoa4ml.lang.common_models</code>","text":""},{"location":"reference/qoa4ml/lang/datamodel_enum/","title":"datamodel_enum","text":""},{"location":"reference/qoa4ml/lang/datamodel_enum/#qoa4ml.lang.datamodel_enum","title":"<code>qoa4ml.lang.datamodel_enum</code>","text":""},{"location":"reference/qoa4ml/lang/datamodel_enum/#qoa4ml.lang.datamodel_enum-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/lang/ml_contract/","title":"ml_contract","text":""},{"location":"reference/qoa4ml/lang/ml_contract/#qoa4ml.lang.ml_contract","title":"<code>qoa4ml.lang.ml_contract</code>","text":""},{"location":"reference/qoa4ml/observability/","title":"observability","text":""},{"location":"reference/qoa4ml/observability/#qoa4ml.observability","title":"<code>qoa4ml.observability</code>","text":""},{"location":"reference/qoa4ml/observability/odop_obs/","title":"odop_obs","text":""},{"location":"reference/qoa4ml/observability/odop_obs/#qoa4ml.observability.odop_obs","title":"<code>qoa4ml.observability.odop_obs</code>","text":""},{"location":"reference/qoa4ml/observability/odop_obs/embedded_database/","title":"embedded_database","text":""},{"location":"reference/qoa4ml/observability/odop_obs/embedded_database/#qoa4ml.observability.odop_obs.embedded_database","title":"<code>qoa4ml.observability.odop_obs.embedded_database</code>","text":""},{"location":"reference/qoa4ml/observability/odop_obs/exporter/","title":"exporter","text":""},{"location":"reference/qoa4ml/observability/odop_obs/exporter/#qoa4ml.observability.odop_obs.exporter","title":"<code>qoa4ml.observability.odop_obs.exporter</code>","text":""},{"location":"reference/qoa4ml/observability/odop_obs/node_aggregator/","title":"node_aggregator","text":""},{"location":"reference/qoa4ml/observability/odop_obs/node_aggregator/#qoa4ml.observability.odop_obs.node_aggregator","title":"<code>qoa4ml.observability.odop_obs.node_aggregator</code>","text":""},{"location":"reference/qoa4ml/observability/odop_obs/node_aggregator/#qoa4ml.observability.odop_obs.node_aggregator-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/observability/odop_obs/node_aggregator/#qoa4ml.observability.odop_obs.node_aggregator-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/","title":"probes","text":""},{"location":"reference/qoa4ml/probes/#qoa4ml.probes","title":"<code>qoa4ml.probes</code>","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/","title":"docker_monitoring_probe","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe","title":"<code>qoa4ml.probes.docker_monitoring_probe</code>","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe","title":"<code>DockerMonitoringProbe</code>","text":"<p>DockerMonitoringProbe is responsible for monitoring Docker containers and creating reports.</p> <p>Parameters:</p> Name Type Description Default <code>DockerProbeConfig</code> <p>Configuration settings for the Docker monitoring probe.</p> required <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>ClientInfo</code> <p>Information about the client.</p> required <p>Attributes:</p> Name Type Description <code>config</code> <code>DockerProbeConfig</code> <p>The Docker monitoring probe configuration.</p> <code>obs_service_url</code> <code>str</code> <p>The URL of the observation service, if registration is required.</p> <code>docker_client</code> <code>DockerClient</code> <p>The Docker client for communicating with Docker API.</p> <p>Methods:</p> Name Description <code>create_report</code> <p>Create a report based on Docker container statistics.</p>"},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe(connector)","title":"<code>connector</code>","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe(client_info)","title":"<code>client_info</code>","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe.__init__","title":"<code>__init__(config, connector, client_info)</code>","text":"<p>Initialize an instance of DockerMonitoringProbe.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>DockerProbeConfig</code> <p>Configuration settings for the Docker monitoring probe.</p> required <code>connector</code> \u00b6 <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>client_info</code> \u00b6 <code>ClientInfo</code> <p>Information about the client.</p> required"},{"location":"reference/qoa4ml/probes/docker_monitoring_probe/#qoa4ml.probes.docker_monitoring_probe.DockerMonitoringProbe.create_report","title":"<code>create_report()</code>","text":"<p>Create a report based on Docker container statistics.</p> <p>Returns:</p> Type Description <code>str</code> <p>JSON-encoded report containing Docker container statistics.</p> Notes <ul> <li>This method collects statistics for the specified Docker containers.</li> <li>If the report dictionary is empty, it adds a 2-second delay to prevent fast looping.</li> <li>In case of a RuntimeError, an error message is returned in a JSON format.</li> </ul>"},{"location":"reference/qoa4ml/probes/mlquality/","title":"mlquality","text":""},{"location":"reference/qoa4ml/probes/mlquality/#qoa4ml.probes.mlquality","title":"<code>qoa4ml.probes.mlquality</code>","text":""},{"location":"reference/qoa4ml/probes/mlquality/#qoa4ml.probes.mlquality-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/probe/","title":"probe","text":""},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe","title":"<code>qoa4ml.probes.probe</code>","text":""},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe.Probe","title":"<code>Probe</code>","text":""},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe.Probe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe.Probe.start_reporting","title":"<code>start_reporting(background=True)</code>","text":"<p>background = False for blocking reporting</p>"},{"location":"reference/qoa4ml/probes/probe/#qoa4ml.probes.probe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/","title":"process_monitoring_probe","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe","title":"<code>qoa4ml.probes.process_monitoring_probe</code>","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe","title":"<code>ProcessMonitoringProbe</code>","text":"<p>ProcessMonitoringProbe is responsible for monitoring system processes and creating reports based on usage statistics.</p> <p>Parameters:</p> Name Type Description Default <code>ProcessProbeConfig</code> <p>Configuration settings for the process monitoring probe.</p> required <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>Optional[ClientInfo]</code> <p>Information about the client, default is None.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>config</code> <code>ProcessProbeConfig</code> <p>The process monitoring probe configuration.</p> <code>pid</code> <code>int</code> <p>The process ID to monitor.</p> <code>environment</code> <code>EnvironmentEnum</code> <p>The environment in which the process is running.</p> <code>process</code> <code>Process</code> <p>The psutil Process object for the monitored process.</p> <code>obs_service_url</code> <code>Optional[str]</code> <p>The URL of the observation service, if registration is required.</p> <code>metadata</code> <code>Union[dict, ProcessMetadata]</code> <p>Metadata related to the monitored process.</p> <p>Methods:</p> Name Description <code>get_cpu_usage</code> <p>Get the CPU usage of the process.</p> <code>get_mem_usage</code> <p>Get the memory usage of the process.</p> <code>create_report</code> <p>Create a JSON report based on the process statistics.</p>"},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe(connector)","title":"<code>connector</code>","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe(client_info)","title":"<code>client_info</code>","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe.__init__","title":"<code>__init__(config, connector, client_info=None)</code>","text":"<p>Initialize an instance of ProcessMonitoringProbe.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>ProcessProbeConfig</code> <p>Configuration settings for the process monitoring probe.</p> required <code>connector</code> \u00b6 <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>client_info</code> \u00b6 <code>Optional[ClientInfo]</code> <p>Information about the client, default is None.</p> <code>None</code>"},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe.create_report","title":"<code>create_report()</code>","text":"<p>Create a JSON report based on the process statistics.</p> <p>Returns:</p> Type Description <code>str</code> <p>JSON-encoded report containing process statistics.</p> Notes <ul> <li>This method collects CPU and memory usage stats for the specified process.</li> <li>Reports are generated differently based on the environment (HPC or other).</li> </ul>"},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe.get_cpu_usage","title":"<code>get_cpu_usage()</code>","text":"<p>Get the CPU usage of the process.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing the CPU usage information.</p>"},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe.ProcessMonitoringProbe.get_mem_usage","title":"<code>get_mem_usage()</code>","text":"<p>Get the memory usage of the process.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing the memory usage in megabytes.</p>"},{"location":"reference/qoa4ml/probes/process_monitoring_probe/#qoa4ml.probes.process_monitoring_probe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/","title":"system_monitoring_probe","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe","title":"<code>qoa4ml.probes.system_monitoring_probe</code>","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe","title":"<code>SystemMonitoringProbe</code>","text":"<p>SystemMonitoringProbe is responsible for monitoring system resources and creating reports based on usage statistics.</p> <p>Parameters:</p> Name Type Description Default <code>SystemProbeConfig</code> <p>Configuration settings for the system monitoring probe.</p> required <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>Optional[ClientInfo]</code> <p>Information about the client, default is None.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>config</code> <code>SystemProbeConfig</code> <p>The system monitoring probe configuration.</p> <code>node_name</code> <code>str</code> <p>The name of the node being monitored.</p> <code>environment</code> <code>EnvironmentEnum</code> <p>The environment in which the node is running.</p> <code>cpu_metadata</code> <code>dict</code> <p>Metadata about the CPU.</p> <code>gpu_metadata</code> <code>dict</code> <p>Metadata about the GPU.</p> <code>mem_metadata</code> <code>dict</code> <p>Metadata about the memory.</p> <code>metadata</code> <code>dict</code> <p>General metadata about the node.</p> <p>Methods:</p> Name Description <code>get_cpu_metadata</code> <p>Get metadata about the CPU.</p> <code>get_cpu_usage</code> <p>Get the CPU usage of the system.</p> <code>get_gpu_metadata</code> <p>Get metadata about the GPU.</p> <code>get_gpu_usage</code> <p>Get the GPU usage of the system.</p> <code>get_mem_metadata</code> <p>Get metadata about the memory.</p> <code>get_mem_usage</code> <p>Get the memory usage of the system.</p> <code>create_report</code> <p>Create a JSON report based on system resource usage statistics.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe(config)","title":"<code>config</code>","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe(connector)","title":"<code>connector</code>","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe(client_info)","title":"<code>client_info</code>","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.__init__","title":"<code>__init__(config, connector, client_info=None)</code>","text":"<p>Initialize an instance of SystemMonitoringProbe.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> \u00b6 <code>SystemProbeConfig</code> <p>Configuration settings for the system monitoring probe.</p> required <code>connector</code> \u00b6 <code>BaseConnector</code> <p>Connector to send the report data.</p> required <code>client_info</code> \u00b6 <code>Optional[ClientInfo]</code> <p>Information about the client, default is None.</p> <code>None</code>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.create_report","title":"<code>create_report()</code>","text":"<p>Create a JSON report based on system resource usage statistics.</p> <p>Returns:</p> Type Description <code>str</code> <p>JSON-encoded report containing system resource usage statistics.</p> Notes <ul> <li>This method collects CPU, GPU, and memory usage stats for the system.</li> <li>Reports are generated differently based on the environment (HPC or other).</li> </ul>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_cpu_metadata","title":"<code>get_cpu_metadata()</code>","text":"<p>Get metadata about the CPU.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing metadata about the CPU.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_cpu_usage","title":"<code>get_cpu_usage()</code>","text":"<p>Get the CPU usage of the system.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing the CPU usage information in percentage.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_gpu_metadata","title":"<code>get_gpu_metadata()</code>","text":"<p>Get metadata about the GPU.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing metadata about the GPU.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_gpu_usage","title":"<code>get_gpu_usage()</code>","text":"<p>Get the GPU usage of the system.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing the GPU usage information.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_mem_metadata","title":"<code>get_mem_metadata()</code>","text":"<p>Get metadata about the memory.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing memory metadata in gigabytes.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe.SystemMonitoringProbe.get_mem_usage","title":"<code>get_mem_usage()</code>","text":"<p>Get the memory usage of the system.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing the memory usage in megabytes.</p>"},{"location":"reference/qoa4ml/probes/system_monitoring_probe/#qoa4ml.probes.system_monitoring_probe-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/reports/","title":"reports","text":""},{"location":"reference/qoa4ml/reports/#qoa4ml.reports","title":"<code>qoa4ml.reports</code>","text":""},{"location":"reference/qoa4ml/reports/abstract_report/","title":"abstract_report","text":""},{"location":"reference/qoa4ml/reports/abstract_report/#qoa4ml.reports.abstract_report","title":"<code>qoa4ml.reports.abstract_report</code>","text":""},{"location":"reference/qoa4ml/reports/general_application_report/","title":"general_application_report","text":""},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report","title":"<code>qoa4ml.reports.general_application_report</code>","text":""},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport","title":"<code>GeneralApplicationReport</code>","text":"<p>GeneralApplicationReport manages the reporting of application metrics and inference data.</p> <p>Parameters:</p> Name Type Description Default <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required <p>Attributes:</p> Name Type Description <code>client_config</code> <code>ClientInfo</code> <p>A deep copy of the client configuration.</p> <code>init_time</code> <code>float</code> <p>The initialization time of the report.</p> <code>report</code> <code>GeneralApplicationReportModel</code> <p>The current state of the report.</p> <code>execution_instance</code> <code>MicroserviceInstance</code> <p>An instance representing the current execution context.</p> <code>previous_reports</code> <code>list[MicroserviceInstance]</code> <p>A list of previous execution instances.</p> <p>Methods:</p> Name Description <code>reset</code> <p>Reset the report to an initial state.</p> <code>process_previous_report</code> <p>Process and incorporate a previous report.</p> <code>observe_metric</code> <p>Observe and record a metric.</p> <code>observe_inference</code> <p>Observe and record inference data.</p> <code>observe_inference_metric</code> <p>Observe and record an inference-specific metric.</p>"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport(client_config)","title":"<code>client_config</code>","text":""},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.__init__","title":"<code>__init__(client_config)</code>","text":"<p>Initialize an instance of GeneralApplicationReport.</p> <p>Parameters:</p> Name Type Description Default <code>client_config</code> \u00b6 <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.observe_inference","title":"<code>observe_inference(inference_value)</code>","text":"<p>Observe and record inference data.</p> <p>Parameters:</p> Name Type Description Default <code>inference_value</code> \u00b6 <code>Any</code> <p>The value of the inference to be recorded.</p> required Notes <ul> <li>This method records inference values as a metric with the name \"Inference\" and report type ml_specific.</li> </ul>"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.observe_inference_metric","title":"<code>observe_inference_metric(metric)</code>","text":"<p>Observe and record an inference-specific metric.</p> <p>Parameters:</p> Name Type Description Default <code>metric</code> \u00b6 <code>Metric</code> <p>The inference-specific metric to be recorded.</p> required"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.observe_metric","title":"<code>observe_metric(report_type, stage, metric)</code>","text":"<p>Observe and record a metric.</p> <p>Parameters:</p> Name Type Description Default <code>report_type</code> \u00b6 <code>ReportTypeEnum</code> <p>The type of report being generated.</p> required <code>stage</code> \u00b6 <code>str</code> <p>The stage of the process in which the metric is recorded.</p> required <code>metric</code> \u00b6 <code>Metric</code> <p>The metric to be recorded.</p> required"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.process_previous_report","title":"<code>process_previous_report(previous_report_dict)</code>","text":"<p>Process and incorporate a previous report.</p> <p>Parameters:</p> Name Type Description Default <code>previous_report_dict</code> \u00b6 <code>dict</code> <p>Dictionary representation of a previous report.</p> required Notes <ul> <li>This method assumes the last metric in the previous report was observed by the previous instance.</li> <li>It appends the metrics from the previous report to the current report.</li> </ul>"},{"location":"reference/qoa4ml/reports/general_application_report/#qoa4ml.reports.general_application_report.GeneralApplicationReport.reset","title":"<code>reset()</code>","text":"<p>Reset the report to an initial state.</p> Notes <ul> <li>This method initializes a new report model and sets up the execution instance and previous reports list.</li> </ul>"},{"location":"reference/qoa4ml/reports/ml_report_model/","title":"ml_report_model","text":""},{"location":"reference/qoa4ml/reports/ml_report_model/#qoa4ml.reports.ml_report_model","title":"<code>qoa4ml.reports.ml_report_model</code>","text":""},{"location":"reference/qoa4ml/reports/ml_reports/","title":"ml_reports","text":""},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports","title":"<code>qoa4ml.reports.ml_reports</code>","text":""},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport","title":"<code>MLReport</code>","text":"<p>MLReport manages the reporting of machine learning metrics and inference data.</p> <p>Parameters:</p> Name Type Description Default <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required <p>Attributes:</p> Name Type Description <code>client_config</code> <code>ClientInfo</code> <p>A deep copy of the client configuration.</p> <code>init_time</code> <code>float</code> <p>The initialization time of the report.</p> <code>previous_report</code> <code>list[GeneralMlInferenceReport]</code> <p>A list of previously processed reports.</p> <code>report</code> <code>GeneralMlInferenceReport</code> <p>The current state of the report.</p> <p>Methods:</p> Name Description <code>reset</code> <p>Reset the report to an initial state.</p> <code>combine_stage_report</code> <p>Combine metrics from the current and previous stage reports.</p> <code>process_previous_report</code> <p>Process and incorporate a previous report.</p> <code>observe_metric</code> <p>Observe and record a metric.</p> <code>observe_inference</code> <p>Observe and record inference data.</p> <code>observe_inference_metric</code> <p>Observe and record an inference-specific metric.</p> <code>generate_report</code> <p>Generate the report and optionally reset the current report state.</p>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport(client_config)","title":"<code>client_config</code>","text":""},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.__init__","title":"<code>__init__(client_config)</code>","text":"<p>Initialize an instance of MLReport.</p> <p>Parameters:</p> Name Type Description Default <code>client_config</code> \u00b6 <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.combine_stage_report","title":"<code>combine_stage_report(current_stage_report, previous_stage_report)</code>","text":"<p>Combine metrics from the current and previous stage reports.</p> <p>Parameters:</p> Name Type Description Default <code>current_stage_report</code> \u00b6 <code>dict</code> <p>The current stage report containing metrics.</p> required <code>previous_stage_report</code> \u00b6 <code>dict</code> <p>The previous stage report containing metrics.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Combined stage report containing metrics from both reports.</p>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.generate_report","title":"<code>generate_report(reset=True, corr_id=None)</code>","text":"<p>Generate the report and optionally reset the current report state.</p> <p>Parameters:</p> Name Type Description Default <code>reset</code> \u00b6 <code>bool</code> <p>Whether to reset the report state after generating the report, default is True.</p> <code>True</code> <code>corr_id</code> \u00b6 <code>Optional[str]</code> <p>Correlation ID for the report, default is None.</p> <code>None</code> <p>Returns:</p> Type Description <code>BaseReport</code> <p>The generated report.</p> Notes <ul> <li>Adds metadata such as client configuration, timestamp, and runtime to the report.</li> <li>Deep copies the current state of the report before optionally resetting it.</li> </ul>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.observe_inference","title":"<code>observe_inference(inference_value)</code>","text":"<p>Observe and record inference data.</p> <p>Parameters:</p> Name Type Description Default <code>inference_value</code> \u00b6 <code>Any</code> <p>The value of the inference to be recorded.</p> required Notes <ul> <li>Raises a warning if inference data already exists for the current instance.</li> </ul>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.observe_inference_metric","title":"<code>observe_inference_metric(metric)</code>","text":"<p>Observe and record an inference-specific metric.</p> <p>Parameters:</p> Name Type Description Default <code>metric</code> \u00b6 <code>Metric</code> <p>The inference-specific metric to be recorded.</p> required"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.observe_metric","title":"<code>observe_metric(report_type, stage, metric)</code>","text":"<p>Observe and record a metric.</p> <p>Parameters:</p> Name Type Description Default <code>report_type</code> \u00b6 <code>ReportTypeEnum</code> <p>The type of report being generated.</p> required <code>stage</code> \u00b6 <code>str</code> <p>The stage of the process in which the metric is recorded.</p> required <code>metric</code> \u00b6 <code>Metric</code> <p>The metric to be recorded.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the stage name is empty or the report type is not handled.</p>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.process_previous_report","title":"<code>process_previous_report(previous_report_dict)</code>","text":"<p>Process and incorporate a previous report.</p> <p>Parameters:</p> Name Type Description Default <code>previous_report_dict</code> \u00b6 <code>dict</code> <p>Dictionary representation of a previous report.</p> required Notes <ul> <li>Service quality, data quality, and ML inference reports are combined with the current report.</li> </ul>"},{"location":"reference/qoa4ml/reports/ml_reports/#qoa4ml.reports.ml_reports.MLReport.reset","title":"<code>reset()</code>","text":"<p>Reset the report to an initial state.</p> Notes <ul> <li>This method initializes a new report model and clears the list of previous reports.</li> </ul>"},{"location":"reference/qoa4ml/reports/resources_report_model/","title":"resources_report_model","text":""},{"location":"reference/qoa4ml/reports/resources_report_model/#qoa4ml.reports.resources_report_model","title":"<code>qoa4ml.reports.resources_report_model</code>","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/","title":"rohe_reports","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports","title":"<code>qoa4ml.reports.rohe_reports</code>","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport","title":"<code>RoheReport</code>","text":"<p>RoheReport manages the reporting of metrics and inference data for a specific application.</p> <p>Parameters:</p> Name Type Description Default <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required <p>Attributes:</p> Name Type Description <code>client_config</code> <code>ClientInfo</code> <p>A deep copy of the client configuration.</p> <code>init_time</code> <code>float</code> <p>The initialization time of the report.</p> <code>previous_report</code> <code>list[RoheReportModel]</code> <p>A list of previously processed reports.</p> <code>inference_report</code> <code>EnsembleInferenceReport</code> <p>The current inference report.</p> <code>execution_graph</code> <code>ExecutionGraph</code> <p>The current execution graph.</p> <code>report</code> <code>RoheReportModel</code> <p>The current state of the report.</p> <code>previous_microservice_instance</code> <code>list[MicroserviceInstance]</code> <p>List of previous microservice instances.</p> <code>execution_instance</code> <code>MicroserviceInstance</code> <p>An instance representing the current execution context.</p> <p>Methods:</p> Name Description <code>reset</code> <p>Reset the report to an initial state.</p> <code>import_report_from_file</code> <p>Import a report from a specified file path.</p> <code>combine_stage_report</code> <p>Combine metrics from the current and previous stage reports.</p> <code>process_previous_report</code> <p>Process and incorporate a previous report.</p> <code>build_execution_graph</code> <p>Build the execution graph for the current report.</p> <code>observe_metric</code> <p>Observe and record a metric.</p> <code>observe_inference</code> <p>Observe and record inference data.</p> <code>observe_inference_metric</code> <p>Observe and record an inference-specific metric.</p> <code>generate_report</code> <p>Generate the report and optionally reset the current report state.</p>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport(client_config)","title":"<code>client_config</code>","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.__init__","title":"<code>__init__(client_config)</code>","text":"<p>Initialize an instance of RoheReport.</p> <p>Parameters:</p> Name Type Description Default <code>client_config</code> \u00b6 <code>ClientInfo</code> <p>Configuration settings related to the client.</p> required"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.build_execution_graph","title":"<code>build_execution_graph()</code>","text":"<p>Build the execution graph for the current report.</p> Notes <ul> <li>Creates a new endpoint in the execution graph linking to previous microservice instances.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.combine_stage_report","title":"<code>combine_stage_report(current_stage_report, previous_stage_report)</code>","text":"<p>Combine metrics from the current and previous stage reports.</p> <p>Parameters:</p> Name Type Description Default <code>current_stage_report</code> \u00b6 <code>dict</code> <p>The current stage report containing metrics.</p> required <code>previous_stage_report</code> \u00b6 <code>dict</code> <p>The previous stage report containing metrics.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Combined stage report containing metrics from both reports.</p>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.generate_report","title":"<code>generate_report(reset=True, corr_id=None)</code>","text":"<p>Generate the report and optionally reset the current report state.</p> <p>Parameters:</p> Name Type Description Default <code>reset</code> \u00b6 <code>bool</code> <p>Whether to reset the report state after generating the report, default is True.</p> <code>True</code> <code>corr_id</code> \u00b6 <code>Optional[str]</code> <p>Correlation ID for the report, default is None.</p> <code>None</code> <p>Returns:</p> Type Description <code>RoheReportModel</code> <p>The generated report.</p> Notes <ul> <li>Adds metadata such as client configuration, timestamp, and runtime to the report.</li> <li>Builds the execution graph and deep copies the current state of the report before optionally resetting it.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.import_report_from_file","title":"<code>import_report_from_file(file_path)</code>","text":"<p>Import a report from a specified file path.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> \u00b6 <code>str</code> <p>The path to the file containing the report data.</p> required Notes <ul> <li>The imported report updates the current inference report and execution graph.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.observe_inference","title":"<code>observe_inference(inference_value)</code>","text":"<p>Observe and record inference data.</p> <p>Parameters:</p> Name Type Description Default <code>inference_value</code> \u00b6 <code>Any</code> <p>The value of the inference to be recorded.</p> required Notes <ul> <li>If an inference endpoint already exists, the prediction value is updated.</li> <li>Otherwise, a new inference endpoint is created in the inference report.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.observe_inference_metric","title":"<code>observe_inference_metric(metric)</code>","text":"<p>Observe and record an inference-specific metric.</p> <p>Parameters:</p> Name Type Description Default <code>metric</code> \u00b6 <code>Metric</code> <p>The inference-specific metric to be recorded.</p> required Notes <ul> <li>If an inference endpoint already exists, the metric is appended to the existing metrics.</li> <li>Otherwise, a new inference endpoint is created and the metric is added to it.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.observe_metric","title":"<code>observe_metric(report_type, stage, metric)</code>","text":"<p>Observe and record a metric.</p> <p>Parameters:</p> Name Type Description Default <code>report_type</code> \u00b6 <code>ReportTypeEnum</code> <p>The type of report being generated.</p> required <code>stage</code> \u00b6 <code>str</code> <p>The stage of the process in which the metric is recorded.</p> required <code>metric</code> \u00b6 <code>Metric</code> <p>The metric to be recorded.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the stage name is empty or the report type is not handled.</p>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.process_previous_report","title":"<code>process_previous_report(previous_report_dict)</code>","text":"<p>Process and incorporate a previous report.</p> <p>Parameters:</p> Name Type Description Default <code>previous_report_dict</code> \u00b6 <code>dict</code> <p>Dictionary representation of a previous report.</p> required Notes <ul> <li>Raises a ValueError if the previous report is empty.</li> <li>Service quality, data quality, ML-specific quality reports, and execution graphs are combined with the current report.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports.RoheReport.reset","title":"<code>reset()</code>","text":"<p>Reset the report to an initial state.</p> Notes <ul> <li>This method initializes a new report model and clears the list of previous reports.</li> <li>It also resets the inference report, execution graph, and execution instance.</li> </ul>"},{"location":"reference/qoa4ml/reports/rohe_reports/#qoa4ml.reports.rohe_reports-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/utils/","title":"utils","text":""},{"location":"reference/qoa4ml/utils/#qoa4ml.utils","title":"<code>qoa4ml.utils</code>","text":""},{"location":"reference/qoa4ml/utils/dataquality_utils/","title":"dataquality_utils","text":""},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils","title":"<code>qoa4ml.utils.dataquality_utils</code>","text":""},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.eva_duplicate","title":"<code>eva_duplicate(data)</code>","text":"<p>Evaluate and return the number or percentage of duplicate entries in the data.</p> Parameters: <p>data : numpy.ndarray or pandas.DataFrame     Input data to be evaluated.</p> Returns: <p>dict or None     A dictionary containing the following keys if successful:       - DataQualityEnum.duplicate_ratio: Percentage of duplicate data.       - DataQualityEnum.total_duplicate: Total number of duplicate entries.     Returns None if the input data type is unsupported or if an exception occurs.</p>"},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.eva_erronous","title":"<code>eva_erronous(data, errors=None)</code>","text":"<p>Evaluate and return the number or percentage of erroneous data entries.</p> Parameters: <p>data : numpy.ndarray or pandas.DataFrame     Input data to be evaluated. errors : list, optional     List of items considered as errors. If not provided, NaNs will be considered as errors.</p> Returns: <p>dict or None     A dictionary containing the following keys if successful:       - DataQualityEnum.total_errors: Total number of errors.       - DataQualityEnum.error_ratios: Percentage of errors.     Returns None if the input data type is unsupported or if an exception occurs.</p>"},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.eva_input_file_type","title":"<code>eva_input_file_type(input_file, allowed_data_type)</code>","text":"<p>Check if the input file matches any of the allowed data types</p> Parameters: <p>input_file : UploadFile     The uploaded file object to be checked for data type. allowed_data_type : List[str]     A list of allowed data types to compare against the content type of the input file.</p> Returns: <p>bool     True if the content type of the input file is in the list of allowed data types,     otherwise False.</p>"},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.eva_missing","title":"<code>eva_missing(data, null_count=True, correlations=False, predict=False)</code>","text":"<p>Evaluate and return statistics about missing data in the dataset.</p> Parameters: <p>data : numpy.ndarray or pandas.DataFrame     Input data to be evaluated. null_count : bool, default=True     If True, return the count of missing values in each column. correlations : bool, default=False     If True, return the correlation matrix of missing values. predict : bool, default=False     If True, enable missing data prediction (not implemented).</p> Returns: <p>dict or None     A dictionary containing:       - DataQualityEnum.null_count: Count of missing values (if null_count is True).       - DataQualityEnum.null_correlations: Correlation matrix of missing values (if correlations is True).     Returns None if the input data type is unsupported or if an exception occurs.</p>"},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.eva_none","title":"<code>eva_none(data)</code>","text":"<p>Evaluate and return statistics about valid and None (NaN) values in the dataset.</p> Parameters: <p>data : numpy.ndarray or pandas.DataFrame     Input data to be evaluated.</p> Returns: <p>dict or None     A dictionary containing the following keys if successful:       - DataQualityEnum.total_valid: Total count of valid (non-NaN) entries.       - DataQualityEnum.total_none: Total count of None (NaN) entries.       - DataQualityEnum.none_ratio: Percentage of valid entries.     Returns None if the input data type is unsupported or if an exception occurs.</p>"},{"location":"reference/qoa4ml/utils/dataquality_utils/#qoa4ml.utils.dataquality_utils.image_quality","title":"<code>image_quality(input_image)</code>","text":"<p>Assess various quality metrics of an input image.</p> Parameters: <p>input_image : bytes or np.ndarray     The input image in either byte format or as a numpy array.</p> Returns: <p>dict     A dictionary containing the following keys:       - ImageQualityNameEnum.image_size: The size of the image (width, height).       - ImageQualityNameEnum.color_mode: The color mode of the image (e.g., 'RGB').       - ImageQualityNameEnum.color_channel: The number of color channels in the image.</p>"},{"location":"reference/qoa4ml/utils/docker_util/","title":"docker_util","text":""},{"location":"reference/qoa4ml/utils/docker_util/#qoa4ml.utils.docker_util","title":"<code>qoa4ml.utils.docker_util</code>","text":""},{"location":"reference/qoa4ml/utils/gpu_utils/","title":"gpu_utils","text":""},{"location":"reference/qoa4ml/utils/gpu_utils/#qoa4ml.utils.gpu_utils","title":"<code>qoa4ml.utils.gpu_utils</code>","text":""},{"location":"reference/qoa4ml/utils/jetson_utils/","title":"jetson_utils","text":""},{"location":"reference/qoa4ml/utils/jetson_utils/#qoa4ml.utils.jetson_utils","title":"<code>qoa4ml.utils.jetson_utils</code>","text":""},{"location":"reference/qoa4ml/utils/logger/","title":"logger","text":""},{"location":"reference/qoa4ml/utils/logger/#qoa4ml.utils.logger","title":"<code>qoa4ml.utils.logger</code>","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/","title":"pynvml_forked","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/#qoa4ml.utils.pynvml_forked","title":"<code>qoa4ml.utils.pynvml_forked</code>","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/#qoa4ml.utils.pynvml_forked-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/#qoa4ml.utils.pynvml_forked.NVMLError","title":"<code>NVMLError</code>","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/#qoa4ml.utils.pynvml_forked.NVMLError-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/utils/pynvml_forked/#qoa4ml.utils.pynvml_forked.NVMLError.__new__","title":"<code>__new__(typ, value)</code>","text":"<p>Maps value to a proper subclass of NVMLError. See _extractNVMLErrorsAsClasses function for more details</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/","title":"qoa_utils","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils","title":"<code>qoa4ml.utils.qoa_utils</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils-functions","title":"Functions","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_gbyte","title":"<code>convert_to_gbyte(value)</code>","text":"<p>Convert a value from bytes to gigabytes.</p> <p>Parameters:</p> Name Type Description Default <code>float</code> <p>The value in bytes to be converted.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The converted value in gigabytes.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_gbyte(value)","title":"<code>value</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_kbyte","title":"<code>convert_to_kbyte(value)</code>","text":"<p>Convert a value from bytes to kilobytes.</p> <p>Parameters:</p> Name Type Description Default <code>float</code> <p>The value in bytes to be converted.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The converted value in kilobytes.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_kbyte(value)","title":"<code>value</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_mbyte","title":"<code>convert_to_mbyte(value)</code>","text":"<p>Convert a value from bytes to megabytes.</p> <p>Parameters:</p> Name Type Description Default <code>float</code> <p>The value in bytes to be converted.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The converted value in megabytes.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.convert_to_mbyte(value)","title":"<code>value</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_cgroup_version","title":"<code>get_cgroup_version()</code>","text":"<p>Retrieve the current cgroup version.</p> <p>Returns:</p> Type Description <code>str</code> <p>The cgroup version (\"v1\" or \"v2\").</p> Notes <p>Uses subprocess to execute the <code>mount</code> command and grep for cgroup version.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_cpu_stat","title":"<code>get_cpu_stat(stats, key)</code>","text":"<p>Retrieve CPU usage statistics from Docker stats.</p> <p>Parameters:</p> Name Type Description Default <code>dict</code> <p>The Docker stats dictionary.</p> required <code>str</code> <p>The key indicating the type of CPU statistic (e.g., \"percentage\").</p> required <p>Returns:</p> Type Description <code>float</code> <p>The CPU usage percentage, or -1 if the key is not recognized.</p> Notes <ul> <li>Calculates the CPU usage percentage based on the difference between the current and previous CPU usage.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_cpu_stat(stats)","title":"<code>stats</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_cpu_stat(key)","title":"<code>key</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_dict_at","title":"<code>get_dict_at(dictionary, i=0)</code>","text":"<p>Retrieve the key-value pair at a specific index in a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>dict</code> <p>The dictionary from which to retrieve the key-value pair.</p> required <code>int</code> <p>The index of the key-value pair to retrieve, default is 0.</p> <code>0</code> <p>Returns:</p> Type Description <code>tuple</code> <p>A tuple containing the key and the value at the specified index.</p> <p>Raises:</p> Type Description <code>IndexError</code> <p>If the index is out of range.</p> Notes <ul> <li>Logs an error and prints the exception traceback if an error occurs.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_dict_at(dictionary)","title":"<code>dictionary</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_dict_at(i)","title":"<code>i</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_file_dir","title":"<code>get_file_dir(file, to_string=True)</code>","text":"<p>Get the directory of a file.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The file path.</p> required <code>bool</code> <p>Flag to return the directory as a string, default is True.</p> <code>True</code> <p>Returns:</p> Type Description <code>str or Path</code> <p>The directory of the file as a string or Path object.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_file_dir(file)","title":"<code>file</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_file_dir(to_string)","title":"<code>to_string</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_mem_stat","title":"<code>get_mem_stat(stats, key)</code>","text":"<p>Retrieve memory usage statistics from Docker stats.</p> <p>Parameters:</p> Name Type Description Default <code>dict</code> <p>The Docker stats dictionary.</p> required <code>str</code> <p>The key indicating the type of memory statistic (e.g., \"used\").</p> required <p>Returns:</p> Type Description <code>int</code> <p>The memory usage in bytes, or -1 if the key is not recognized.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_mem_stat(stats)","title":"<code>stats</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_mem_stat(key)","title":"<code>key</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_parent_dir","title":"<code>get_parent_dir(file, parent_level=1, to_string=True)</code>","text":"<p>Get the parent directory of a file by a specified number of levels.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The file path.</p> required <code>int</code> <p>The number of levels up to retrieve the parent directory, default is 1.</p> <code>1</code> <code>bool</code> <p>Flag to return the directory as a string, default is True.</p> <code>True</code> <p>Returns:</p> Type Description <code>str or Path</code> <p>The parent directory of the file as a string or Path object.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_parent_dir(file)","title":"<code>file</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_parent_dir(parent_level)","title":"<code>parent_level</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_parent_dir(to_string)","title":"<code>to_string</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_proc_cpu","title":"<code>get_proc_cpu(pid=None)</code>","text":"<p>Retrieve CPU usage statistics for a given process and its children.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The process ID to retrieve CPU stats for. If None, uses the current process ID.</p> <code>None</code> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU stats for the process and its children.</p> Notes <ul> <li>The main process's stats are keyed by its PID.</li> <li>Each child process's stats are keyed by its PID with a \"c\" suffix.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_proc_cpu(pid)","title":"<code>pid</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_proc_mem","title":"<code>get_proc_mem(pid=None)</code>","text":"<p>Retrieve memory usage statistics for a given process and its children.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The process ID to retrieve memory stats for. If None, uses the current process ID.</p> <code>None</code> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing memory stats for the process and its children.</p> Notes <ul> <li>The main process's stats are keyed by its PID.</li> <li>Each child process's stats are keyed by its PID with a \"c\" suffix.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_proc_mem(pid)","title":"<code>pid</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_process_allowed_cpus","title":"<code>get_process_allowed_cpus()</code>","text":"<p>Retrieve the list of CPU cores available to the process.</p> <p>Returns:</p> Type Description <code>list[int]</code> <p>A list of CPU core indices.</p> Notes <ul> <li>Uses the call process's PID (0) to get the CPU affinity.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_process_allowed_memory","title":"<code>get_process_allowed_memory()</code>","text":"<p>Retrieve the memory limit allowed to the process.</p> <p>Returns:</p> Type Description <code>Optional[float]</code> <p>The memory limit in bytes, or None if unable to retrieve.</p> Notes <ul> <li>Supports both cgroup v1 and v2 formats to get the memory limit.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_sys_cpu","title":"<code>get_sys_cpu()</code>","text":"<p>Retrieve system CPU statistics and times.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU stats and times.</p> Notes <p>Uses psutil to retrieve both CPU stats and times.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_sys_cpu_metadata","title":"<code>get_sys_cpu_metadata()</code>","text":"<p>Retrieve metadata information about the system CPU.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU frequency and thread count.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_sys_cpu_util","title":"<code>get_sys_cpu_util()</code>","text":"<p>Retrieve system CPU utilization for each core.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU utilization for each core.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_sys_mem","title":"<code>get_sys_mem()</code>","text":"<p>Retrieve system memory statistics.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing memory stats.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.get_sys_net","title":"<code>get_sys_net()</code>","text":"<p>Retrieve system network I/O statistics.</p> <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing network I/O stats.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.is_numpyarray","title":"<code>is_numpyarray(obj)</code>","text":"<p>Check if an object is a NumPy array.</p> <p>Parameters:</p> Name Type Description Default <code>Any</code> <p>The object to check.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the object is a NumPy array, False otherwise.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.is_numpyarray(obj)","title":"<code>obj</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.load_config","title":"<code>load_config(file_path)</code>","text":"<p>Load a configuration file.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The path to the configuration file.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>The loaded configuration dictionary.</p> Notes <p>Supports JSON and YAML file formats. Logs a warning if the format is unsupported.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.load_config(file_path)","title":"<code>file_path</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.make_folder","title":"<code>make_folder(temp_path)</code>","text":"<p>Create a folder if it doesn't already exist.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The path of the folder to be created.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the folder exists or is created successfully, False otherwise.</p> Notes <p>If the folder already exists, nothing is done.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.make_folder(temp_path)","title":"<code>temp_path</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.merge_report","title":"<code>merge_report(f_report, i_report, prio=True)</code>","text":"<p>Merge two report dictionaries.</p> <p>Parameters:</p> Name Type Description Default <code>dict</code> <p>The first report dictionary.</p> required <code>dict</code> <p>The second report dictionary.</p> required <code>bool</code> <p>Flag to determine which report takes priority in case of conflict, default is True.</p> <code>True</code> <p>Returns:</p> Type Description <code>dict</code> <p>The merged report dictionary.</p> Notes <ul> <li>If both reports are dictionaries, merges them recursively.</li> <li>If there is a conflict and prio is True, the value from f_report is used; otherwise, the value from i_report is used.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.merge_report(f_report)","title":"<code>f_report</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.merge_report(i_report)","title":"<code>i_report</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.merge_report(prio)","title":"<code>prio</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_child_cpu","title":"<code>report_proc_child_cpu(process)</code>","text":"<p>Retrieve CPU usage statistics for a given process and its children.</p> <p>Parameters:</p> Name Type Description Default <code>Process</code> <p>The process to retrieve CPU stats for.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU stats for the process and its children.</p> Notes <p>This function can be time-consuming as it recursively evaluates all child processes.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_child_cpu(process)","title":"<code>process</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_cpu","title":"<code>report_proc_cpu(process)</code>","text":"<p>Retrieve CPU usage statistics for a given process.</p> <p>Parameters:</p> Name Type Description Default <code>Process</code> <p>The process to retrieve CPU stats for.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing CPU stats for the process.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_cpu(process)","title":"<code>process</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_mem","title":"<code>report_proc_mem(process)</code>","text":"<p>Retrieve memory usage statistics for a given process.</p> <p>Parameters:</p> Name Type Description Default <code>Process</code> <p>The process to retrieve memory stats for.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing memory stats for the process.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.report_proc_mem(process)","title":"<code>process</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.set_logger_level","title":"<code>set_logger_level(logging_level)</code>","text":"<p>Set the logging level for the application logger.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The desired logging level: 0 - NOTSET 1 - DEBUG 2 - INFO 3 - WARNING 4 - ERROR 5 - CRITICAL</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the logging level is not between 0 and 5.</p>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.set_logger_level(logging_level)","title":"<code>logging_level</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.sys_monitor","title":"<code>sys_monitor(client, interval)</code>","text":"<p>Start monitoring system reports.</p> <p>Parameters:</p> Name Type Description Default <code>Any</code> <p>The client to send the report to.</p> required <code>int</code> <p>The time interval in seconds between reports.</p> required Notes <ul> <li>Starts a new thread to generate system reports at regular intervals.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.sys_monitor(client)","title":"<code>client</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.sys_monitor(interval)","title":"<code>interval</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report","title":"<code>system_report(client, interval, to_mb=True, to_gb=False, to_kb=False)</code>","text":"<p>Generate a system report and send it to the client at regular intervals.</p> <p>Parameters:</p> Name Type Description Default <code>Any</code> <p>The client to send the report to.</p> required <code>int</code> <p>The time interval in seconds between reports.</p> required <code>bool</code> <p>Convert network I/O values to megabytes, default is True.</p> <code>True</code> <code>bool</code> <p>Convert network I/O values to gigabytes, default is False.</p> <code>False</code> <code>bool</code> <p>Convert network I/O values to kilobytes, default is False.</p> <code>False</code> Notes <ul> <li>Collects CPU, memory, and network I/O statistics.</li> <li>Logs errors if any occur during data collection or report sending.</li> <li>Sleeps for the specified interval between reports.</li> </ul>"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report(client)","title":"<code>client</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report(interval)","title":"<code>interval</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report(to_mb)","title":"<code>to_mb</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report(to_gb)","title":"<code>to_gb</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.system_report(to_kb)","title":"<code>to_kb</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_json","title":"<code>to_json(file_path, conf)</code>","text":"<p>Save a configuration to a JSON file.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The path to the file where the configuration should be saved.</p> required <code>dict</code> <p>The configuration dictionary to save.</p> required"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_json(file_path)","title":"<code>file_path</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_json(conf)","title":"<code>conf</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_yaml","title":"<code>to_yaml(file_path, conf)</code>","text":"<p>Save a configuration to a YAML file.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The path to the file where the configuration should be saved.</p> required <code>dict</code> <p>The configuration dictionary to save.</p> required"},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_yaml(file_path)","title":"<code>file_path</code>","text":""},{"location":"reference/qoa4ml/utils/qoa_utils/#qoa4ml.utils.qoa_utils.to_yaml(conf)","title":"<code>conf</code>","text":""},{"location":"reference/qoa4ml/utils/repeated_timer/","title":"repeated_timer","text":""},{"location":"reference/qoa4ml/utils/repeated_timer/#qoa4ml.utils.repeated_timer","title":"<code>qoa4ml.utils.repeated_timer</code>","text":""},{"location":"reference/qoa4ml/utils/repeated_timer/#qoa4ml.utils.repeated_timer-classes","title":"Classes","text":""},{"location":"reference/qoa4ml/utils/repeated_timer/#qoa4ml.utils.repeated_timer.RepeatedTimer","title":"<code>RepeatedTimer</code>","text":"<p>Repeat <code>function</code> every <code>interval</code> seconds.</p>"}]}